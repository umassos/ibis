# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import frontend_service_edgetpu_pb2 as frontend__service__edgetpu__pb2


class FrontEndServiceTPUStub(object):
  """The FrontEnd Service definition.
  """

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.infer = channel.unary_unary(
        '/FrontEndServiceTPU/infer',
        request_serializer=frontend__service__edgetpu__pb2.InferenceRequestTPU.SerializeToString,
        response_deserializer=frontend__service__edgetpu__pb2.InferenceResponseTPU.FromString,
        )
    self.get_status = channel.unary_unary(
        '/FrontEndServiceTPU/get_status',
        request_serializer=frontend__service__edgetpu__pb2.GetStatus.SerializeToString,
        response_deserializer=frontend__service__edgetpu__pb2.Status.FromString,
        )


class FrontEndServiceTPUServicer(object):
  """The FrontEnd Service definition.
  """

  def infer(self, request, context):
    """Send an Inference Request
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def get_status(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_FrontEndServiceTPUServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'infer': grpc.unary_unary_rpc_method_handler(
          servicer.infer,
          request_deserializer=frontend__service__edgetpu__pb2.InferenceRequestTPU.FromString,
          response_serializer=frontend__service__edgetpu__pb2.InferenceResponseTPU.SerializeToString,
      ),
      'get_status': grpc.unary_unary_rpc_method_handler(
          servicer.get_status,
          request_deserializer=frontend__service__edgetpu__pb2.GetStatus.FromString,
          response_serializer=frontend__service__edgetpu__pb2.Status.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'FrontEndServiceTPU', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
